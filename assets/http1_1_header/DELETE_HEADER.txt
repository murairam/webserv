DELETE Header (1):
-- Standard Delete --
-- 200 OK or 204 No Content if successful --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.x
> Accept: */*
> Connection: keep-alive
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:20:13 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/killme.txt" \
  -H 'Host: example.com:30000' \
  -H 'User-Agent: curl/8.x' \
  -H 'Accept: */*' \
  -H 'Connection: keep-alive'
`

DELETE Header (2):
-- Delete with preconditions -- (using `If-Match` with ETag)
-- 200 OK or 204 No Content if successful --
-- 412 Precondition Failed if ETag mismatches --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> If-Match: "nonexistent-etag-will-fail"
> Accept: */*
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:21:36 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
# If you know/decide an ETag; if not, server may ignore it or return 412
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/killme.txt" \
  -H 'Host: example.com:30000' \
  -H 'If-Match: "nonexistent-etag-will-fail"' \
  -H 'Accept: */*'

`

DELETE Header (3):
-- Delete with preconditions -- (using `If-Unmodified-Since` with time)
-- 412 if file modified after that date; 501 Not Implemented is also OK --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> If-Unmodified-Since: Tue, 16 Sep 2025 20:38:29 GMT
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:22:37 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
# Using time instead of ETag
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/killme.txt" \
  -H 'Host: example.com:30000' \
  -H 'If-Unmodified-Since: Tue, 16 Sep 2025 20:38:29 GMT'
`

DELETE Header (4):
-- Delete non-existent file --
-- 404 Not Found --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/not_here.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:24:22 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/not_here.txt" \
  -H 'Host: example.com:30000'
`

DELETE Header (5):
-- Delete forbidden location (permission denied or route rules banned) --
-- 403 Forbidden, or 405 Method Not Allowed if DELETE is disabled for this path --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /index.html HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:26:07 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/index.html" \
  -H 'Host: example.com:30000'
`

DELETE Header (6):
-- Delete a folder (instead of a file) --
-- 403 Forbidden (just don't allow deleting a folder) --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/ HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:27:32 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/" \
  -H 'Host: example.com:30000'
`

DELETE Header (7):
-- Delete with a body -- (server usually ignore it, and must not hang or fuck up)
-- 413 Payload Too Large if mroe than body size limit --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> Content-Type: text/plain
> Content-Length: 13
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:29:50 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/killme.txt" \
  -H 'Host: example.com:30000' \
  -H 'Content-Type: text/plain' \
  --data 'please delete'
`

DELETE Header (8):
-- This one is meant to intentionally fuck up the server --
-- If both Content-Length and Transfer-Encoding:chunked appear --
-- Delete with conflicting length indicators --
-- Must reject with 400 --
-- MUST NOT EVEN TRY TO READ THE BODY, OR IT FUCKS UP --
`
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> Content-Length: 5
> Transfer-Encoding: chunked
> 
> hello
`

Nginx response :
`
< HTTP/1.1 400 Bad Request
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:32:11 GMT
< Content-Type: text/html
< Content-Length: 166
< Connection: close
< 
`

Header created by :
`
printf 'DELETE /testdel/killme.txt HTTP/1.1\r\nHost: example.com:30000\r\nContent-Length: 5\r\nTransfer-Encoding: chunked\r\n\r\nhello' | nc 127.0.0.1 30000
`

DELETE Header (9):
-- Delete with URL-encoded path traversal attempts --
-- This one may not fuck the server but it fucks the files on the server --
-- 400 or 403 --
-- NEVER ESCAPE DOCROOT --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /%2e%2e/%2e%2e/etc/passwd HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> 
`

Nginx response :
`
< HTTP/1.1 400 Bad Request
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:53:47 GMT
< Content-Type: text/html
< Content-Length: 166
< Connection: close
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/%2e%2e/%2e%2e/etc/passwd" \
  -H 'Host: example.com:30000'
`

DELETE Header (10):
-- This one is also meant to fuck up the server --
-- Delete with extra proxy/CORS/noise headers --
-- When you see shits like Origin, Via, X-Forwarded-For, Forwarded, TE --
-- Either reject with 400 or return 404 --
`
*   Trying 127.0.0.1:30000...
* Connected to 127.0.0.1 (127.0.0.1) port 30000
* using HTTP/1.x
> DELETE /testdel/killme.txt HTTP/1.1
> Host: example.com:30000
> User-Agent: curl/8.12.1
> Accept: */*
> Origin: http://example.com
> X-Forwarded-For: 203.0.113.45
> Via: 1.1 proxy.local
> TE: trailers
> 
`

Nginx response :
`
< HTTP/1.1 404 Not Found
< Server: nginx/1.26.3 (Ubuntu)
< Date: Tue, 16 Sep 2025 22:37:39 GMT
< Content-Type: text/html
< Content-Length: 162
< Connection: keep-alive
< 
`

Header created by :
`
curl -v --http1.1 -X DELETE "http://127.0.0.1:30000/testdel/killme.txt" \
  -H 'Host: example.com:30000' \
  -H 'Origin: http://example.com' \
  -H 'X-Forwarded-For: 203.0.113.45' \
  -H 'Via: 1.1 proxy.local' \
  -H 'TE: trailers'
`
